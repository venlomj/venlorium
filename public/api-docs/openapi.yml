openapi: 3.0.0
info:
  title: Venlorium API
  version: 1.0.0
paths:
  /api/users:
    get:
      summary: "Get list of users"
      operationId: "getUsers"
      tags:
        - "User"
      responses:
        '200':
          description: "A list of users"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /api/auth/login:
    post:
      summary: "Authenticate a user and generate a token"
      description: "Allows a user to log in using their email and password. Returns an authentication token upon successful login."
      operationId: "loginUser"
      tags:
        - "Authentication"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: "user@example.com"
                password:
                  type: string
                  format: password
                  example: "password123"
      responses:
        '200':
          description: "Login successful"
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      token:
                        type: string
                        example: "abcdef123456"
        '401':
          description: "Invalid credentials"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid credentials"

  /api/users/{id}:
    get:
      summary: "Find a user by ID"
      description: "Retrieves a user based on the provided ID and returns the user data."
      operationId: "findUser"
      tags:
        - "User"
      parameters:
        - name: id
          in: path
          required: true
          description: "The ID of the user to retrieve"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "User found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Hello World"
                  user:
                    $ref: '#/components/schemas/User'
        '404':
          description: "User not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User not found"

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "The unique identifier for the user"
        email:
          type: string
          format: email
          description: "The user's email address"
        name:
          type: string
          description: "The user's name"
